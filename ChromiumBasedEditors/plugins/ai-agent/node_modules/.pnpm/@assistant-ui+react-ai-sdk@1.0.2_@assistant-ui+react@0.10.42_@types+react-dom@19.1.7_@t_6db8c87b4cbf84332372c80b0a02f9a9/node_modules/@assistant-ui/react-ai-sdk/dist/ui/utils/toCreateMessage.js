// src/ui/utils/toCreateMessage.ts
import {
  generateId
} from "ai";
var toCreateMessage = async (message) => {
  const textParts = message.content.filter((part) => part.type === "text").map((t) => t.text).join("\n\n");
  const parts = [
    {
      type: "text",
      text: textParts
    }
  ];
  const imageParts = message.content.filter((part) => part.type === "image").map(
    (part) => ({
      type: "file",
      mediaType: "image/png",
      // Default to PNG, could be made more dynamic
      url: part.image
    })
  );
  parts.push(...imageParts);
  const attachmentParts = await Promise.all(
    (message.attachments ?? []).map(async (m) => {
      if (m.file == null) throw new Error("Attachment did not contain a file");
      return {
        type: "file",
        mediaType: m.file.type,
        filename: m.file.name,
        url: await getFileDataURL(m.file)
      };
    })
  );
  parts.push(...attachmentParts);
  return {
    id: generateId(),
    role: message.role,
    parts
  };
};
var getFileDataURL = (file) => new Promise((resolve, reject) => {
  const reader = new FileReader();
  reader.onload = () => resolve(reader.result);
  reader.onerror = (error) => reject(error);
  reader.readAsDataURL(file);
});
export {
  toCreateMessage
};
//# sourceMappingURL=toCreateMessage.js.map