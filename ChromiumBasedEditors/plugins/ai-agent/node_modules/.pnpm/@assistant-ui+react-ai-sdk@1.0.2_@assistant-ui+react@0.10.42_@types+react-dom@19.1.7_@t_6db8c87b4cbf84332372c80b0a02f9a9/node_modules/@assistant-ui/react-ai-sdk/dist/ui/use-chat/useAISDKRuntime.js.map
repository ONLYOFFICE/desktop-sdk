{"version":3,"sources":["../../../src/ui/use-chat/useAISDKRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport type { UIMessage, useChat } from \"@ai-sdk/react\";\nimport {\n  useExternalStoreRuntime,\n  ExternalStoreAdapter,\n  ThreadHistoryAdapter,\n  AssistantRuntime,\n  ThreadMessage,\n  MessageFormatAdapter,\n} from \"@assistant-ui/react\";\nimport { sliceMessagesUntil } from \"../utils/sliceMessagesUntil\";\nimport { toCreateMessage } from \"../utils/toCreateMessage\";\nimport { vercelAttachmentAdapter } from \"../utils/vercelAttachmentAdapter\";\nimport { getVercelAIMessages } from \"../getVercelAIMessages\";\nimport { AISDKMessageConverter } from \"../utils/convertMessage\";\nimport {\n  AISDKStorageFormat,\n  aiSDKV5FormatAdapter,\n} from \"../adapters/aiSDKFormatAdapter\";\nimport { useExternalHistory } from \"./useExternalHistory\";\nimport { useMemo } from \"react\";\n\nexport type AISDKRuntimeAdapter = {\n  adapters?:\n    | (NonNullable<ExternalStoreAdapter[\"adapters\"]> & {\n        history?: ThreadHistoryAdapter | undefined;\n      })\n    | undefined;\n};\n\nexport const useAISDKRuntime = <UI_MESSAGE extends UIMessage = UIMessage>(\n  chatHelpers: ReturnType<typeof useChat<UI_MESSAGE>>,\n  adapter: AISDKRuntimeAdapter = {},\n) => {\n  const messages = AISDKMessageConverter.useThreadMessages({\n    isRunning:\n      chatHelpers.status === \"submitted\" || chatHelpers.status == \"streaming\",\n    messages: chatHelpers.messages,\n  });\n\n  const isLoading = useExternalHistory(\n    useMemo(\n      () => ({\n        get current(): AssistantRuntime {\n          return runtime;\n        },\n      }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [],\n    ),\n    adapter.adapters?.history,\n    AISDKMessageConverter.toThreadMessages as (\n      messages: UI_MESSAGE[],\n    ) => ThreadMessage[],\n    aiSDKV5FormatAdapter as MessageFormatAdapter<\n      UI_MESSAGE,\n      AISDKStorageFormat\n    >,\n    (messages) => {\n      chatHelpers.setMessages(messages);\n    },\n  );\n\n  const runtime = useExternalStoreRuntime({\n    isRunning:\n      chatHelpers.status === \"submitted\" || chatHelpers.status === \"streaming\",\n    messages,\n    setMessages: (messages) =>\n      chatHelpers.setMessages(\n        messages.map(getVercelAIMessages<UI_MESSAGE>).flat(),\n      ),\n    onCancel: async () => chatHelpers.stop(),\n    onNew: async (message) => {\n      const createMessage = await toCreateMessage<UI_MESSAGE>(message);\n      await chatHelpers.sendMessage(createMessage);\n    },\n    onEdit: async (message) => {\n      const newMessages = sliceMessagesUntil(\n        chatHelpers.messages,\n        message.parentId,\n      );\n      chatHelpers.setMessages(newMessages);\n\n      const createMessage = await toCreateMessage<UI_MESSAGE>(message);\n      await chatHelpers.sendMessage(createMessage);\n    },\n    onReload: async (parentId: string | null) => {\n      const newMessages = sliceMessagesUntil(chatHelpers.messages, parentId);\n      chatHelpers.setMessages(newMessages);\n\n      await chatHelpers.regenerate();\n    },\n    onAddToolResult: ({ toolCallId, result }) => {\n      chatHelpers.addToolResult({\n        tool: toolCallId,\n        toolCallId,\n        output: result,\n      });\n    },\n    adapters: {\n      attachments: vercelAttachmentAdapter,\n      ...adapter.adapters,\n    },\n    isLoading,\n  });\n\n  return runtime;\n};\n"],"mappings":";;;AAGA;AAAA,EACE;AAAA,OAMK;AACP,SAAS,0BAA0B;AACnC,SAAS,uBAAuB;AAChC,SAAS,+BAA+B;AACxC,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC;AAAA,EAEE;AAAA,OACK;AACP,SAAS,0BAA0B;AACnC,SAAS,eAAe;AAUjB,IAAM,kBAAkB,CAC7B,aACA,UAA+B,CAAC,MAC7B;AACH,QAAM,WAAW,sBAAsB,kBAAkB;AAAA,IACvD,WACE,YAAY,WAAW,eAAe,YAAY,UAAU;AAAA,IAC9D,UAAU,YAAY;AAAA,EACxB,CAAC;AAED,QAAM,YAAY;AAAA,IAChB;AAAA,MACE,OAAO;AAAA,QACL,IAAI,UAA4B;AAC9B,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAEA,CAAC;AAAA,IACH;AAAA,IACA,QAAQ,UAAU;AAAA,IAClB,sBAAsB;AAAA,IAGtB;AAAA,IAIA,CAACA,cAAa;AACZ,kBAAY,YAAYA,SAAQ;AAAA,IAClC;AAAA,EACF;AAEA,QAAM,UAAU,wBAAwB;AAAA,IACtC,WACE,YAAY,WAAW,eAAe,YAAY,WAAW;AAAA,IAC/D;AAAA,IACA,aAAa,CAACA,cACZ,YAAY;AAAA,MACVA,UAAS,IAAI,mBAA+B,EAAE,KAAK;AAAA,IACrD;AAAA,IACF,UAAU,YAAY,YAAY,KAAK;AAAA,IACvC,OAAO,OAAO,YAAY;AACxB,YAAM,gBAAgB,MAAM,gBAA4B,OAAO;AAC/D,YAAM,YAAY,YAAY,aAAa;AAAA,IAC7C;AAAA,IACA,QAAQ,OAAO,YAAY;AACzB,YAAM,cAAc;AAAA,QAClB,YAAY;AAAA,QACZ,QAAQ;AAAA,MACV;AACA,kBAAY,YAAY,WAAW;AAEnC,YAAM,gBAAgB,MAAM,gBAA4B,OAAO;AAC/D,YAAM,YAAY,YAAY,aAAa;AAAA,IAC7C;AAAA,IACA,UAAU,OAAO,aAA4B;AAC3C,YAAM,cAAc,mBAAmB,YAAY,UAAU,QAAQ;AACrE,kBAAY,YAAY,WAAW;AAEnC,YAAM,YAAY,WAAW;AAAA,IAC/B;AAAA,IACA,iBAAiB,CAAC,EAAE,YAAY,OAAO,MAAM;AAC3C,kBAAY,cAAc;AAAA,QACxB,MAAM;AAAA,QACN;AAAA,QACA,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,UAAU;AAAA,MACR,aAAa;AAAA,MACb,GAAG,QAAQ;AAAA,IACb;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO;AACT;","names":["messages"]}