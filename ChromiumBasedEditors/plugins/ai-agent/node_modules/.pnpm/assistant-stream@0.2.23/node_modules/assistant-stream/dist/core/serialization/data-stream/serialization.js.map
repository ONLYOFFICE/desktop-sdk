{"version":3,"sources":["../../../../src/core/serialization/data-stream/serialization.ts"],"sourcesContent":["import { DataStreamChunk, DataStreamStreamChunkType } from \"./chunk-types\";\n\nexport class DataStreamChunkEncoder extends TransformStream<\n  DataStreamChunk,\n  string\n> {\n  constructor() {\n    super({\n      transform: (chunk, controller) => {\n        controller.enqueue(`${chunk.type}:${JSON.stringify(chunk.value)}\\n`);\n      },\n    });\n  }\n}\n\nexport class DataStreamChunkDecoder extends TransformStream<\n  string,\n  DataStreamChunk\n> {\n  constructor() {\n    super({\n      transform: (chunk, controller) => {\n        const index = chunk.indexOf(\":\");\n        if (index === -1) throw new Error(\"Invalid stream part\");\n        controller.enqueue({\n          type: chunk.slice(0, index) as DataStreamStreamChunkType,\n          value: JSON.parse(chunk.slice(index + 1)),\n        });\n      },\n    });\n  }\n}\n"],"mappings":";AAEO,IAAM,yBAAN,cAAqC,gBAG1C;AAAA,EACA,cAAc;AACZ,UAAM;AAAA,MACJ,WAAW,CAAC,OAAO,eAAe;AAChC,mBAAW,QAAQ,GAAG,MAAM,IAAI,IAAI,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,CAAI;AAAA,MACrE;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEO,IAAM,yBAAN,cAAqC,gBAG1C;AAAA,EACA,cAAc;AACZ,UAAM;AAAA,MACJ,WAAW,CAAC,OAAO,eAAe;AAChC,cAAM,QAAQ,MAAM,QAAQ,GAAG;AAC/B,YAAI,UAAU,GAAI,OAAM,IAAI,MAAM,qBAAqB;AACvD,mBAAW,QAAQ;AAAA,UACjB,MAAM,MAAM,MAAM,GAAG,KAAK;AAAA,UAC1B,OAAO,KAAK,MAAM,MAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,QAC1C,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AACF;","names":[]}