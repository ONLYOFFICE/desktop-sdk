{"version":3,"sources":["../../../src/core/object/createObjectStream.ts"],"sourcesContent":["import { ReadonlyJSONValue } from \"../../utils\";\nimport { withPromiseOrValue } from \"../utils/withPromiseOrValue\";\nimport { ObjectStreamAccumulator } from \"./ObjectStreamAccumulator\";\nimport { ObjectStreamOperation, ObjectStreamChunk } from \"./types\";\n\ntype ObjectStreamController = {\n  readonly abortSignal: AbortSignal;\n\n  enqueue(operations: readonly ObjectStreamOperation[]): void;\n};\n\nclass ObjectStreamControllerImpl implements ObjectStreamController {\n  private _controller: ReadableStreamDefaultController<ObjectStreamChunk>;\n  private _abortController = new AbortController();\n  private _accumulator: ObjectStreamAccumulator;\n\n  get abortSignal() {\n    return this._abortController.signal;\n  }\n\n  constructor(\n    controller: ReadableStreamDefaultController<ObjectStreamChunk>,\n    defaultValue: ReadonlyJSONValue,\n  ) {\n    this._controller = controller;\n    this._accumulator = new ObjectStreamAccumulator(defaultValue);\n  }\n\n  enqueue(operations: readonly ObjectStreamOperation[]) {\n    this._accumulator.append(operations);\n\n    this._controller.enqueue({\n      snapshot: this._accumulator.state,\n      operations,\n    });\n  }\n\n  __internalError(error: unknown) {\n    this._controller.error(error);\n  }\n\n  __internalClose() {\n    this._controller.close();\n  }\n\n  __internalCancel(reason?: unknown) {\n    this._abortController.abort(reason);\n  }\n}\n\nconst getStreamControllerPair = (defaultValue: ReadonlyJSONValue) => {\n  let controller!: ObjectStreamControllerImpl;\n  const stream = new ReadableStream<ObjectStreamChunk>({\n    start(c) {\n      controller = new ObjectStreamControllerImpl(c, defaultValue);\n    },\n    cancel(reason: unknown) {\n      controller.__internalCancel(reason);\n    },\n  });\n\n  return [stream, controller] as const;\n};\n\ntype CreateObjectStreamOptions = {\n  execute: (controller: ObjectStreamController) => void | PromiseLike<void>;\n  defaultValue?: ReadonlyJSONValue;\n};\n\nexport const createObjectStream = ({\n  execute,\n  defaultValue = {},\n}: CreateObjectStreamOptions) => {\n  const [stream, controller] = getStreamControllerPair(defaultValue);\n\n  withPromiseOrValue(\n    () => execute(controller),\n    () => {\n      controller.__internalClose();\n    },\n    (e: unknown) => {\n      controller.__internalError(e);\n    },\n  );\n\n  return stream;\n};\n"],"mappings":";AACA,SAAS,0BAA0B;AACnC,SAAS,+BAA+B;AASxC,IAAM,6BAAN,MAAmE;AAAA,EACzD;AAAA,EACA,mBAAmB,IAAI,gBAAgB;AAAA,EACvC;AAAA,EAER,IAAI,cAAc;AAChB,WAAO,KAAK,iBAAiB;AAAA,EAC/B;AAAA,EAEA,YACE,YACA,cACA;AACA,SAAK,cAAc;AACnB,SAAK,eAAe,IAAI,wBAAwB,YAAY;AAAA,EAC9D;AAAA,EAEA,QAAQ,YAA8C;AACpD,SAAK,aAAa,OAAO,UAAU;AAEnC,SAAK,YAAY,QAAQ;AAAA,MACvB,UAAU,KAAK,aAAa;AAAA,MAC5B;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,gBAAgB,OAAgB;AAC9B,SAAK,YAAY,MAAM,KAAK;AAAA,EAC9B;AAAA,EAEA,kBAAkB;AAChB,SAAK,YAAY,MAAM;AAAA,EACzB;AAAA,EAEA,iBAAiB,QAAkB;AACjC,SAAK,iBAAiB,MAAM,MAAM;AAAA,EACpC;AACF;AAEA,IAAM,0BAA0B,CAAC,iBAAoC;AACnE,MAAI;AACJ,QAAM,SAAS,IAAI,eAAkC;AAAA,IACnD,MAAM,GAAG;AACP,mBAAa,IAAI,2BAA2B,GAAG,YAAY;AAAA,IAC7D;AAAA,IACA,OAAO,QAAiB;AACtB,iBAAW,iBAAiB,MAAM;AAAA,IACpC;AAAA,EACF,CAAC;AAED,SAAO,CAAC,QAAQ,UAAU;AAC5B;AAOO,IAAM,qBAAqB,CAAC;AAAA,EACjC;AAAA,EACA,eAAe,CAAC;AAClB,MAAiC;AAC/B,QAAM,CAAC,QAAQ,UAAU,IAAI,wBAAwB,YAAY;AAEjE;AAAA,IACE,MAAM,QAAQ,UAAU;AAAA,IACxB,MAAM;AACJ,iBAAW,gBAAgB;AAAA,IAC7B;AAAA,IACA,CAAC,MAAe;AACd,iBAAW,gBAAgB,CAAC;AAAA,IAC9B;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}