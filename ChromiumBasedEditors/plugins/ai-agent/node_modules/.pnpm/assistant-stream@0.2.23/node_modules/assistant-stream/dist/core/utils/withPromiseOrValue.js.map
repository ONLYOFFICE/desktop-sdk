{"version":3,"sources":["../../../src/core/utils/withPromiseOrValue.ts"],"sourcesContent":["export function withPromiseOrValue<T>(\n  callback: () => T | PromiseLike<T>,\n  thenHandler: (value: T) => PromiseLike<void> | void,\n  catchHandler: (error: unknown) => PromiseLike<void> | void,\n): PromiseLike<void> | void {\n  try {\n    const promiseOrValue = callback();\n    if (\n      typeof promiseOrValue === \"object\" &&\n      promiseOrValue !== null &&\n      \"then\" in promiseOrValue\n    ) {\n      return promiseOrValue.then(thenHandler, catchHandler);\n    } else {\n      thenHandler(promiseOrValue);\n    }\n  } catch (e) {\n    catchHandler(e);\n  }\n}\n"],"mappings":";AAAO,SAAS,mBACd,UACA,aACA,cAC0B;AAC1B,MAAI;AACF,UAAM,iBAAiB,SAAS;AAChC,QACE,OAAO,mBAAmB,YAC1B,mBAAmB,QACnB,UAAU,gBACV;AACA,aAAO,eAAe,KAAK,aAAa,YAAY;AAAA,IACtD,OAAO;AACL,kBAAY,cAAc;AAAA,IAC5B;AAAA,EACF,SAAS,GAAG;AACV,iBAAa,CAAC;AAAA,EAChB;AACF;","names":[]}