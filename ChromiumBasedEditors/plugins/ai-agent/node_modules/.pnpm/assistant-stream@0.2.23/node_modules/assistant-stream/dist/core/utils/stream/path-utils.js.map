{"version":3,"sources":["../../../../src/core/utils/stream/path-utils.ts"],"sourcesContent":["import { AssistantStreamChunk } from \"../../AssistantStreamChunk\";\nimport { Counter } from \"../Counter\";\n\nexport class PathAppendEncoder extends TransformStream<\n  AssistantStreamChunk,\n  AssistantStreamChunk\n> {\n  constructor(idx: number) {\n    super({\n      transform(chunk, controller) {\n        controller.enqueue({\n          ...chunk,\n          path: [idx, ...chunk.path],\n        });\n      },\n    });\n  }\n}\n\nexport class PathAppendDecoder extends TransformStream<\n  AssistantStreamChunk,\n  AssistantStreamChunk\n> {\n  constructor(idx: number) {\n    super({\n      transform(chunk, controller) {\n        const {\n          path: [idx2, ...path],\n        } = chunk;\n\n        if (idx !== idx2)\n          throw new Error(`Path mismatch: expected ${idx}, got ${idx2}`);\n\n        controller.enqueue({\n          ...chunk,\n          path,\n        });\n      },\n    });\n  }\n}\n\nexport class PathMergeEncoder extends TransformStream<\n  AssistantStreamChunk,\n  AssistantStreamChunk\n> {\n  constructor(counter: Counter) {\n    const innerCounter = new Counter();\n    const mapping = new Map<number, number>();\n    super({\n      transform(chunk, controller) {\n        if (chunk.type === \"part-start\" && chunk.path.length === 0) {\n          mapping.set(innerCounter.up(), counter.up());\n        }\n\n        const [idx, ...path] = chunk.path;\n        if (idx === undefined) {\n          controller.enqueue(chunk);\n          return;\n        }\n        const mappedIdx = mapping.get(idx);\n        if (mappedIdx === undefined) throw new Error(\"Path not found\");\n\n        controller.enqueue({\n          ...chunk,\n          path: [mappedIdx, ...path],\n        });\n      },\n    });\n  }\n}\n"],"mappings":";AACA,SAAS,eAAe;AAEjB,IAAM,oBAAN,cAAgC,gBAGrC;AAAA,EACA,YAAY,KAAa;AACvB,UAAM;AAAA,MACJ,UAAU,OAAO,YAAY;AAC3B,mBAAW,QAAQ;AAAA,UACjB,GAAG;AAAA,UACH,MAAM,CAAC,KAAK,GAAG,MAAM,IAAI;AAAA,QAC3B,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEO,IAAM,oBAAN,cAAgC,gBAGrC;AAAA,EACA,YAAY,KAAa;AACvB,UAAM;AAAA,MACJ,UAAU,OAAO,YAAY;AAC3B,cAAM;AAAA,UACJ,MAAM,CAAC,MAAM,GAAG,IAAI;AAAA,QACtB,IAAI;AAEJ,YAAI,QAAQ;AACV,gBAAM,IAAI,MAAM,2BAA2B,GAAG,SAAS,IAAI,EAAE;AAE/D,mBAAW,QAAQ;AAAA,UACjB,GAAG;AAAA,UACH;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEO,IAAM,mBAAN,cAA+B,gBAGpC;AAAA,EACA,YAAY,SAAkB;AAC5B,UAAM,eAAe,IAAI,QAAQ;AACjC,UAAM,UAAU,oBAAI,IAAoB;AACxC,UAAM;AAAA,MACJ,UAAU,OAAO,YAAY;AAC3B,YAAI,MAAM,SAAS,gBAAgB,MAAM,KAAK,WAAW,GAAG;AAC1D,kBAAQ,IAAI,aAAa,GAAG,GAAG,QAAQ,GAAG,CAAC;AAAA,QAC7C;AAEA,cAAM,CAAC,KAAK,GAAG,IAAI,IAAI,MAAM;AAC7B,YAAI,QAAQ,QAAW;AACrB,qBAAW,QAAQ,KAAK;AACxB;AAAA,QACF;AACA,cAAM,YAAY,QAAQ,IAAI,GAAG;AACjC,YAAI,cAAc,OAAW,OAAM,IAAI,MAAM,gBAAgB;AAE7D,mBAAW,QAAQ;AAAA,UACjB,GAAG;AAAA,UACH,MAAM,CAAC,WAAW,GAAG,IAAI;AAAA,QAC3B,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AACF;","names":[]}