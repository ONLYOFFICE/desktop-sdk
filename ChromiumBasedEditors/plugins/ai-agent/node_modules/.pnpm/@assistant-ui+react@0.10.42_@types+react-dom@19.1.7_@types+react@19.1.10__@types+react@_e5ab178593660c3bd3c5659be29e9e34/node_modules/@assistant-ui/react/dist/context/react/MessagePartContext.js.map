{"version":3,"sources":["../../../src/context/react/MessagePartContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { MessagePartRuntime } from \"../../api/MessagePartRuntime\";\nimport { createStateHookForRuntime } from \"./utils/createStateHookForRuntime\";\n\nexport type MessagePartContextValue = {\n  useMessagePartRuntime: UseBoundStore<ReadonlyStore<MessagePartRuntime>>;\n};\n\nexport const MessagePartContext = createContext<MessagePartContextValue | null>(\n  null,\n);\n\nconst useMessagePartContext = createContextHook(\n  MessagePartContext,\n  \"a component passed to <MessagePrimitive.Parts components={...}>\",\n);\n\nexport function useMessagePartRuntime(options?: {\n  optional?: false | undefined;\n}): MessagePartRuntime;\nexport function useMessagePartRuntime(options?: {\n  optional?: boolean | undefined;\n}): MessagePartRuntime | null;\nexport function useMessagePartRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useMessagePartContext(options);\n  if (!context) return null;\n  return context.useMessagePartRuntime();\n}\n\nexport const useMessagePart = createStateHookForRuntime(useMessagePartRuntime);\n"],"mappings":";;;AAEA,SAAS,qBAAqB;AAE9B,SAAS,yBAAyB;AAGlC,SAAS,iCAAiC;AAMnC,IAAM,qBAAqB;AAAA,EAChC;AACF;AAEA,IAAM,wBAAwB;AAAA,EAC5B;AAAA,EACA;AACF;AAQO,SAAS,sBAAsB,SAEnC;AACD,QAAM,UAAU,sBAAsB,OAAO;AAC7C,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,QAAQ,sBAAsB;AACvC;AAEO,IAAM,iBAAiB,0BAA0B,qBAAqB;","names":[]}